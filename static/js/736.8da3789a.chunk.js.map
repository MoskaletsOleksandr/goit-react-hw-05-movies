{"version":3,"file":"static/js/736.8da3789a.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/themoviedb-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const CharacterName = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  margin: 0;\n  margin-left: 5px;\n`;\n\nexport const ActorName = styled.p`\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const ActorImg = styled.img`\n  width: 50px;\n  height: 75px;\n  object-fit: cover;\n  margin-right: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchMovieCast } from 'services/themoviedb-api';\nimport {\n  CastList,\n  CastItem,\n  ActorImg,\n  ActorName,\n  CharacterName,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';\n  const placeholderImageUrl = 'https://via.placeholder.com/500x500?text=Actor';\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const data = await searchMovieCast(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {cast.length > 0 ? (\n        cast.map(character => {\n          const imageUrl = character.profile_path\n            ? `${baseImageUrl}${character.profile_path}`\n            : placeholderImageUrl;\n\n          return (\n            <CastItem key={character.credit_id}>\n              <ActorImg src={imageUrl} alt={character.name} />\n              <ActorName>{character.name} as</ActorName>\n              <CharacterName>{character.character}</CharacterName>\n            </CastItem>\n          );\n        })\n      ) : (\n        <div>No cast available</div>\n      )}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ODY4YWQ5YTU3MjQwNWQ1M2E0ZWM5ZDgxNjc2ODhkYyIsInN1YiI6IjY0NzI0MmFkZGQ3MzFiMDBkZGYwODJkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.SLy8SYeThyR1frJL8mDfZVKg4zxEpmO8tEYvPLKmkbo';\nconst opt = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n};\n\nexport const searchMovies = async (query, page) => {\n  const url = `${BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movies');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nexport const searchMovieDetails = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch details of movie');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchTrendMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?language=en-US&`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movies');\n    }\n\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nexport const searchMovieCast = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch cast');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovieReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch reviews');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["CastList","styled","CastItem","CharacterName","ActorName","ActorImg","useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","searchMovieCast","data","console","log","length","map","character","imageUrl","profile_path","src","alt","name","credit_id","BASE_URL","opt","method","headers","accept","Authorization","searchMovies","query","page","url","fetch","response","ok","Error","json","error","searchMovieDetails","searchTrendMovies","results","searchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}