{"version":3,"file":"static/js/201.47dbbb0a.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.jsx","components/common/Button/Button.styled.jsx","components/common/Button/Button.jsx","components/SearchBox/SearchBox.jsx","components/pages/Movies.jsx","services/themoviedb-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const MovieWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Container,\n  MovieWrapper,\n  MovieName,\n  MovieImage,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';\n  const placeholderImageUrl = 'https://via.placeholder.com/500x750?text=Movie';\n\n  const location = useLocation();\n  let toHref = '';\n\n  if (location.pathname === '/') {\n    toHref = 'movies/';\n  }\n\n  return (\n    <Container>\n      {movies.map(movie => {\n        const imageUrl = movie.poster_path\n          ? `${baseImageUrl}${movie.poster_path}`\n          : placeholderImageUrl;\n\n        return (\n          <MovieWrapper key={movie.id}>\n            <Link to={`${toHref}${movie.id}`} state={{ from: location }}>\n              <MovieImage src={imageUrl} alt=\"\" />\n              <MovieName>{movie.title}</MovieName>\n            </Link>\n          </MovieWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};","import styled from '@emotion/styled';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Form = styled.form`\n  display: flex;\n  margin-right: auto;\n  margin-left: auto;\n\n  text-align: center;\n\n  padding: 15px;\n\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  right: 6px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ButtonStyled = styled.button`\n  transition: transform 0.3s ease-in-out;\n  min-width: 100px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n  padding: 10px 20px;\n  background-color: #e6e6e6;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #2c3e91;\n    outline: none;\n    transform: scale(1.1);\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nconst Button = ({ children }) => {\n  return <ButtonStyled>{children}</ButtonStyled>;\n};\n\nButton.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Form, Input, Icon } from './SearchBox.styled';\nimport Button from 'components/common/Button/Button';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [queryWord, setQueryWord] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setQueryWord(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (queryWord === '') {\n      alert('Please enter a word to search!');\n      return;\n    }\n    onSubmit(queryWord);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setQueryWord('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input type=\"text\" value={queryWord} onChange={handleChange} />\n      <Button>\n        <Icon />\n      </Button>\n    </Form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/themoviedb-api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryWord = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queryWord === '') {\n      return;\n    }\n\n    const fetchMovies = async () => {\n      try {\n        const results = await searchMovies(queryWord);\n        setMovies(results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovies();\n  }, [queryWord]);\n\n  const updateQueryString = word => {\n    setSearchParams({ query: word });\n  };\n\n  return (\n    <>\n      <SearchBox onSubmit={updateQueryString} />\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ODY4YWQ5YTU3MjQwNWQ1M2E0ZWM5ZDgxNjc2ODhkYyIsInN1YiI6IjY0NzI0MmFkZGQ3MzFiMDBkZGYwODJkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.SLy8SYeThyR1frJL8mDfZVKg4zxEpmO8tEYvPLKmkbo';\nconst opt = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n};\n\nexport const searchMovies = async query => {\n  const url = `${BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movies');\n    }\n\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nexport const searchMovieDetails = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch details of movie');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchTrendMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movies');\n    }\n\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nexport const searchMovieCast = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch cast');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovieReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch reviews');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Container","styled","MovieWrapper","MovieName","MovieImage","MoviesList","movies","location","useLocation","toHref","pathname","map","movie","imageUrl","poster_path","to","id","state","from","src","alt","title","Form","Input","Icon","HiSearch","ButtonStyled","children","SearchBox","onSubmit","useState","queryWord","setQueryWord","resetForm","event","preventDefault","alert","type","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","searchMovies","results","console","error","word","query","BASE_URL","opt","method","headers","accept","Authorization","url","fetch","response","ok","Error","json","data","searchMovieDetails","movieId","searchTrendMovies","searchMovieCast","searchMovieReviews"],"sourceRoot":""}