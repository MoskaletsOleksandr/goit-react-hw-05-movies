{"version":3,"file":"static/js/493.54c1cf49.chunk.js","mappings":"qNAEaA,EAAYC,EAAAA,EAAAA,IAAH,2GAMTC,EAAeD,EAAAA,EAAAA,IAAH,uHASZE,EAAYF,EAAAA,EAAAA,GAAH,mGAOTG,EAAaH,EAAAA,EAAAA,IAAH,yD,SChBVI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIrBC,GAAWC,EAAAA,EAAAA,MACbC,EAAS,GAMb,MAJ0B,MAAtBF,EAASG,WACXD,EAAS,YAIT,SAACT,EAAD,UACGM,EAAOK,KAAI,SAAAC,GACV,IAAMC,EAAWD,EAAME,YAAN,UAbF,oCAaE,OACKF,EAAME,aAbN,iDAgBtB,OACE,SAACZ,EAAD,WACE,UAAC,KAAD,CAAMa,GAAE,UAAKN,GAAL,OAAcG,EAAMI,IAAMC,MAAO,CAAEC,KAAMX,GAAjD,WACE,SAACH,EAAD,CAAYe,IAAKN,EAAUO,IAAI,MAC/B,SAACjB,EAAD,UAAYS,EAAMS,YAHHT,EAAMI,GAO5B,KAGN,C,yGCdD,UAnBa,WACX,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,8GAEKC,EAAAA,EAAAA,KAFL,OAEfC,EAFe,OAGrBJ,EAAUI,GAHW,gDAKrBC,QAAQC,IAAR,MALqB,yDAAH,qDAStBJ,GACD,GAAE,KAEI,SAAC,IAAD,CAAYnB,OAAQA,GAC5B,C,qLCrBKwB,EAAW,+BAGXC,EAAM,CACVC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OALf,yNASWC,EAAY,mCAAG,WAAMC,GAAN,kFACpBC,EADoB,UACXR,EADW,+BACoBO,EADpB,gEAIDE,MAAMD,EAAKP,GAJV,WAIlBS,EAJkB,QAMVC,GANU,sBAOhB,IAAIC,MAAM,0BAPM,uBAULF,EAASG,OAVJ,cAUlBC,EAVkB,yBAWjBA,EAAKC,SAXY,yCAaxBjB,QAAQkB,MAAR,MAbwB,kBAcjB,IAdiB,0DAAH,sDAkBZC,EAAkB,mCAAG,WAAMC,GAAN,kFAC1BV,EAD0B,6CACkBU,EADlB,qCAIPT,MAAMD,EAAKP,GAJJ,WAIxBS,EAJwB,QAMhBC,GANgB,sBAOtB,IAAIC,MAAM,oCAPY,uBAUXF,EAASG,OAVE,cAUxBC,EAVwB,yBAWvBA,GAXuB,kCAa9BhB,QAAQkB,MAAR,MAb8B,0DAAH,sDAiBlBpB,EAAiB,mCAAG,+FACzBY,EADyB,UAChBR,EADgB,wDAINS,MAAMD,EAAKP,GAJL,WAIvBS,EAJuB,QAMfC,GANe,sBAOrB,IAAIC,MAAM,0BAPW,uBAUVF,EAASG,OAVC,cAUvBC,EAVuB,yBAWtBA,EAAKC,SAXiB,yCAa7BjB,QAAQkB,MAAR,MAb6B,kBActB,IAdsB,0DAAH,qDAkBjBG,EAAe,mCAAG,WAAMD,GAAN,kFACvBV,EADuB,6CACqBU,EADrB,6CAIJT,MAAMD,EAAKP,GAJP,WAIrBS,EAJqB,QAMbC,GANa,sBAOnB,IAAIC,MAAM,wBAPS,uBAURF,EAASG,OAVD,cAUrBC,EAVqB,yBAWpBA,GAXoB,kCAa3BhB,QAAQkB,MAAR,MAb2B,0DAAH,sDAiBfI,EAAkB,mCAAG,WAAMF,GAAN,kFAC1BV,EAD0B,6CACkBU,EADlB,oDAIPT,MAAMD,EAAKP,GAJJ,WAIxBS,EAJwB,QAMhBC,GANgB,sBAOtB,IAAIC,MAAM,2BAPY,uBAUXF,EAASG,OAVE,cAUxBC,EAVwB,yBAWvBA,GAXuB,kCAa9BhB,QAAQkB,MAAR,MAb8B,0DAAH,qD,sBCjF/B,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOd,GAEP,YADAQ,EAAOR,EAET,CACIa,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/pages/Home.jsx","services/themoviedb-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const MovieWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Container,\n  MovieWrapper,\n  MovieName,\n  MovieImage,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';\n  const placeholderImageUrl = 'https://via.placeholder.com/500x750?text=Movie';\n\n  const location = useLocation();\n  let toHref = '';\n\n  if (location.pathname === '/') {\n    toHref = 'movies/';\n  }\n\n  return (\n    <Container>\n      {movies.map(movie => {\n        const imageUrl = movie.poster_path\n          ? `${baseImageUrl}${movie.poster_path}`\n          : placeholderImageUrl;\n\n        return (\n          <MovieWrapper key={movie.id}>\n            <Link to={`${toHref}${movie.id}`} state={{ from: location }}>\n              <MovieImage src={imageUrl} alt=\"\" />\n              <MovieName>{movie.title}</MovieName>\n            </Link>\n          </MovieWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { searchTrendMovies } from 'services/themoviedb-api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendMovies = async () => {\n      try {\n        const trendMovies = await searchTrendMovies();\n        setMovies(trendMovies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchTrendMovies();\n  }, []);\n\n  return <MoviesList movies={movies} />;\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ODY4YWQ5YTU3MjQwNWQ1M2E0ZWM5ZDgxNjc2ODhkYyIsInN1YiI6IjY0NzI0MmFkZGQ3MzFiMDBkZGYwODJkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.SLy8SYeThyR1frJL8mDfZVKg4zxEpmO8tEYvPLKmkbo';\nconst opt = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n};\n\nexport const searchMovies = async query => {\n  const url = `${BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movies');\n    }\n\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nexport const searchMovieDetails = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch details of movie');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchTrendMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movies');\n    }\n\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nexport const searchMovieCast = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch cast');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovieReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch reviews');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Container","styled","MovieWrapper","MovieName","MovieImage","MoviesList","movies","location","useLocation","toHref","pathname","map","movie","imageUrl","poster_path","to","id","state","from","src","alt","title","useState","setMovies","useEffect","fetchTrendMovies","searchTrendMovies","trendMovies","console","log","BASE_URL","opt","method","headers","accept","Authorization","searchMovies","query","url","fetch","response","ok","Error","json","data","results","error","searchMovieDetails","movieId","searchMovieCast","searchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}