{"version":3,"file":"static/js/282.06bc997f.chunk.js","mappings":"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","sources":["components/common/SectionTitle/SectionTitle.styled.jsx","components/common/SectionTitle/SectionTitle.jsx","components/MainMovieInfo/MainMovieInfo.styled.jsx","components/MainMovieInfo/MainMovieInfo.jsx","components/common/BackLink/BackLink.styled.jsx","components/common/BackLink/BackLink.jsx","components/pages/MovieDetails.jsx","services/themoviedb-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  text-align: center;\n\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './SectionTitle.styled';\n\nconst SectionTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SectionTitle;\n","import styled from '@emotion/styled';\n\nexport const MainInfo = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const PosterImage = styled.img`\n  width: 200px;\n  height: auto;\n  margin-right: 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nexport const MoviePopularity = styled.p`\n  font-size: 16px;\n  margin-bottom: 5px;\n`;\n\nexport const MovieSectionTitle = styled.h3`\n  font-size: 20px;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieOverview = styled.p`\n  font-size: 16px;\n  line-height: 1.5;\n  margin-bottom: 20px;\n`;\n\nexport const MovieGenres = styled.p`\n  font-size: 16px;\n`;\n","import {\n  MainInfo,\n  MovieGenres,\n  MovieInfo,\n  MovieOverview,\n  MoviePopularity,\n  MovieSectionTitle,\n  MovieTitle,\n  PosterImage,\n} from './MainMovieInfo.styled';\n\nexport const MainMovieInfo = ({ info }) => {\n  const baseImageUrl = 'https://image.tmdb.org/t/p/w500/';\n  const placeholderImageUrl = 'https://via.placeholder.com/500x1000?text=Movie';\n  const imageUrl = info.poster_path\n    ? `${baseImageUrl}${info.poster_path}`\n    : placeholderImageUrl;\n\n  return (\n    <MainInfo>\n      <PosterImage src={imageUrl} alt=\"\" />\n      <MovieInfo>\n        <MovieTitle>{info.title}</MovieTitle>\n        <MoviePopularity>Popularity: {info.popularity}%</MoviePopularity>\n        <MovieSectionTitle>Overview</MovieSectionTitle>\n        <MovieOverview>{info.overview}</MovieOverview>\n        <MovieSectionTitle>Genres</MovieSectionTitle>\n        <MovieGenres>\n          {info.genres.map(genre => genre.name).join(', ')}\n        </MovieGenres>\n      </MovieInfo>\n    </MainInfo>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import { useState, useEffect, useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { MainMovieInfo } from 'components/MainMovieInfo/MainMovieInfo';\nimport SectionTitle from 'components/common/SectionTitle/SectionTitle';\nimport { searchMovieDetails } from 'services/themoviedb-api';\nimport BackLink from 'components/common/BackLink/BackLink';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const details = await searchMovieDetails(movieId);\n        setMovieDetails(details);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <main>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      <SectionTitle title=\"MovieDetails\" />\n      <MainMovieInfo info={movieDetails} />\n      <ul>\n        <li>\n          <Link to=\"cast\" >Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" >Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ODY4YWQ5YTU3MjQwNWQ1M2E0ZWM5ZDgxNjc2ODhkYyIsInN1YiI6IjY0NzI0MmFkZGQ3MzFiMDBkZGYwODJkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.SLy8SYeThyR1frJL8mDfZVKg4zxEpmO8tEYvPLKmkbo';\nconst opt = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n};\n\nexport const searchMovies = async query => {\n  const url = `${BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movies');\n    }\n\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nexport const searchMovieDetails = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch details of movie');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchTrendMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movies');\n    }\n\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nexport const searchMovieCast = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch cast');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovieReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch reviews');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Title","styled","title","MainInfo","PosterImage","MovieInfo","MovieTitle","MoviePopularity","MovieSectionTitle","MovieOverview","MovieGenres","MainMovieInfo","info","imageUrl","poster_path","src","alt","popularity","overview","genres","map","genre","name","join","StyledLink","Link","to","children","size","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovieDetails","searchMovieDetails","details","console","log","current","SectionTitle","BASE_URL","opt","method","headers","accept","Authorization","searchMovies","query","url","fetch","response","ok","Error","json","data","results","error","searchTrendMovies","searchMovieCast","searchMovieReviews"],"sourceRoot":""}