{"version":3,"file":"static/js/387.80d0ab05.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/themoviedb-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 16px;\n`;\n\nexport const Author = styled.p`\n  font-weight: bold;\n  margin-bottom: 8px;\n`;\n\nexport const Content = styled.p`\n  margin: 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchMovieReviews } from 'services/themoviedb-api';\nimport { ReviewList, ReviewItem, Author, Content } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const data = await searchMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewList>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <ReviewItem key={review.id}>\n            <Author>Author: {review.author}</Author>\n            <Content>{review.content}</Content>\n          </ReviewItem>\n        ))\n      ) : (\n        <ReviewItem>No reviews available.</ReviewItem>\n      )}\n    </ReviewList>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ODY4YWQ5YTU3MjQwNWQ1M2E0ZWM5ZDgxNjc2ODhkYyIsInN1YiI6IjY0NzI0MmFkZGQ3MzFiMDBkZGYwODJkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.SLy8SYeThyR1frJL8mDfZVKg4zxEpmO8tEYvPLKmkbo';\nconst opt = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n};\n\nexport const searchMovies = async query => {\n  const url = `${BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movies');\n    }\n\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nexport const searchMovieDetails = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch details of movie');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchTrendMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch movies');\n    }\n\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nexport const searchMovieCast = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch cast');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovieReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n\n  try {\n    const response = await fetch(url, opt);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch reviews');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["ReviewList","styled","ReviewItem","Author","Content","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","searchMovieReviews","data","results","console","log","length","map","review","author","content","id","BASE_URL","opt","method","headers","accept","Authorization","searchMovies","query","url","fetch","response","ok","Error","json","error","searchMovieDetails","searchTrendMovies","searchMovieCast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}